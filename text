## 1　敏捷需求管理

敏捷需求管理包括需求分析、需求与用例、需求验收三部分内容，体现需求管理过程中的分析、测试、验收三个阶段，敏捷需求管理主要体现在各个环节中使用敏捷方法探寻产品痛点、业务价值、用户体验的能力，适应需求变化的能力，快速验证反馈的能力。

## 1.1　需求分析

需求分析是指需求提出方和产品经理之间明确产品需求的阶段，是产品研发运营一体化最初始阶段，把产品需求具象化，形成待办事项列表的过程。主要包括需求内容和形式、需求分析协作和需求管理三方面工作，如表2所示。

### 1.1.1　需求内容和形式

需求分析是将用户需求划分为最小需求条目，并探索问题核心相关事项的过程。（如：用户故事，以下内容统称为用户故事），用户故事描述用户场景，且能适应在开发过程中对其进行评估、不断细化等变化。

### 1.1.2　需求分析协作

需求分析是各个角色沟通协作形成并细化的过程，协作过程需要各角色深入且持续参与。

### 1.1.3　需求管理

需求分析后的用户故事应包括用户需求所涉及的所有事项，统一管理并按照业务价值由高到低排定优先级，并依据用户需求形成产品研发路线图。

敏捷开发管理中，需求收集环节根据以上三个方面所能达到的不同程度分为以下5个等级，具体如下：

## 表1　需求分析

| **级别** | **需求内容和形式**                                           | **需求****分析协作**                                         | **需求的管理**                                               |
| -------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 1        | 需求分析形成需求文档，作为需求提出方和实施方之间的契约。在软件开发过程中允许在变更流程执行后进行变更。 | 需求提出方、需求分析人员在完成需求文档的编写后，由开发团队按照文档进行设计开发。有变更流程，需求提出方、需求分析人员可以通过流程变更需求内容。 | 需求有收口统一管理。                                         |
| 2        | 需求分析形成用户故事，用户故事需符合：1）用户故事在软件开发过程中是可协商并细化的；2）规模适中，可在一次发布周期的时间内完成；3）工作量可评估、有优先级划分。 | 在用户故事进入开发周期前，由产品经理、需求提出方、开发团队一起细化用户故事。 | 产品经理使用产品待办列表统一管理用户故事，且通过用户故事优先级排入发布计划。 |
| 3        | 同上且用户故事符合INVEST标准：1）故事是独立完整的；2）故事是可协商并细化的；3）故事是有业务价值的，能做价值评估；4）故事是能评估工作量和优先级的；5）故事是足够小的，例如：在1-2日内能完成；6）故事是可测试的。 | 在需求收集、分析、开发、上线运营的任何阶段，需求提出方、产品经理、团队成员、运营人员、使用者等各角色都可随时对用户故事进行细化。且当发生规模型产品研发情况，各个团队各角色能共同参与用户故事细化。 | 同上且产品待办列表应符合DEEP原则：1）适当的详细描述的，优先级越高越详细明确；2）用故事点进行估算过大小的；3）随着产品演进不断涌现和变化的；4）优先级从高到低排序的。且当发生规模型产品研发情况，应建立跨团队的产品待办列表，迭代待办列表。 |
| 4        | 同上且有提升需求价值的敏捷活动。例如：典型角色分析、影响地图、用户故事的层级化拆分等。 | 同上且应建立改进需求分析协作的机制：1）应建立特性型的端到端产品研发运营团队，减少跨组织协作的必要性。2）应建立产品级回顾改进机制。例如，建立运营驱动需求的体系，在产品演进过程中，不断涌现需求，能不断优化和调整待办列表的顺序。3）当发生跨团队的产品研发情况，应建立需求分析协作机制，实现史诗故事、特性故事、用户故事的分层管理，可跨团队进行需求拆解细化。 | 同上且产品经理对提出的需求在产品演进过程中持续细化和演进，形成场景化驱动和价值驱动的发布规划（如用户故事地图），以保持产品待办列表的价值最大化。例如，采用精益产品的方法、影响地图、MVP等敏捷方法。有协作型用户故事沟通工具、产品待办列表管理工具。有数据收集和大数据分析需求价值和评估的工具，示例1：能收集用户交互操作的工具。 |
| 5        | 同上                                                         | 同上                                                         | 同上且应建立需求与企业级活动关联，把企业战略和目标通过愿景、目标、关键结果、任务、评估、反馈等环节进行分解，实现企业、团队、个人三个层次对齐，达到需求的业务价值最大化。 |

## 1.2　需求与用例管理

需求与用例管理是指产品经理和开发团队把用户故事的验收标准和测试用例进行关联，验收产品功能是否满足用户故事要求的过程。主要包括需求与用例编写、需求用例验证和需求与用例的管理三个方面，如表3所示。

### 1.2.1　需求与用例编写

是指梳理需求用例，编写需求验收标准，形成测试用例的过程；

### 1.2.2　需求用例验证

使用需求用例，需求用例指导需求开发，验证产品功能的过程；

### 1.2.3　需求与用例管理

建立需求与用例的统一管理库，持续的使用和优化。

敏捷开发管理中的需求与用例管理环节，根据以上三个方面所能达到的不同程度分为以下5个等级，具体如下：

# 表2　需求与用例管理

| **级别** | **需求****与用例编写**                                       | **需求****用例验证**                                         | **需求与用例的管理**                                         |
| -------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 1        | 测试用例与需求关联较少，测试用例在设计阶段结束，代码开发阶段完成。 | 无                                                           | 测试用例在需求功能测试完成后未做归档，无法重用。             |
| 2        | 建立测试用例与用户故事之间关联，测试用例在需求分析阶段结束，设计阶段完成。 | 测试用例在发布线上环境前全部验证通过。                       | 同上                                                         |
| 3        | 同上                                                         | 同上，且测试用例通过工具自动执行。                           | 测试用例作为软件资产管理，所有测试案例验证通过后，方可进行线上功能发布。 |
| 4        | 同上，且产品需求在最初始阶段进行实例化、形成验收标准，成为测试用例的依据，测试能和开发并行工作，形成测试用例。 | 同上                                                         | 同上且需求用例库作为产品的软件代码资产存在，需保持可读性和用例在产品迭代更新中的完整性和准确性。同上且所有的功能上线都以能被可读的需求用例验证通过为目标，每次迭代上线都必须执行沉淀下的所有的需求用例，直到验证和修复通过才可上线。需求用例库无需重建就能作为产品功能回归验收使用。 |
| 5        | 同上                                                         | 需求应具备可阅读的文档和测试验证的实例两种特性，通过建设企业级可视化便捷的平台，建立从用户故事排入迭代开发、开发完成后作为测试验收测试、部署到生产即作为生产验收测试，整个过程的全自动化模式。 | 同上，且应建立企业级可视化便捷的平台，管理需求文档，且可以通过需求文档能查看产品的全貌，且通过平台，需求提出人、最终使用人、产品经理、开发运维人员进行更好的沟通和协作。 |

## 2　敏捷计划管理

敏捷计划管理是产品经理、研发团队以及与产品相关的干系人围绕业务价值交付进行的软件研发过程，包括价值交付、交付过程管理两个部分，要求产品经理、团队以及与产品相关的干系人建立以尽早和持续地交付有价值的软件为目标，通过高效的沟通方式、高效的可视化的工作流程、有效的度量和快速反馈机制，实现软件研发业务价值最大化。
